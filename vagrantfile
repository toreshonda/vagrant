## Префикс для Host-Only сети
CLUSTER_IP="192.168.200."
# <master_IP> - is ip adress master of kubernetes cluster 
MASTER_IP="192.168.200.10"
#<nodes> - how mach of minions VM is bootup
NODES=2
Vagrant.configure("2") do |config|

      #chek installed plugin vagrant-vbguest
	  if Vagrant.has_plugin? 'vagrant-vbguest'
	    config.vbguest.auto_update = true
	    config.vbguest.no_remote = false
	  else
	    puts 'vagrant-vbguest missing, please install the plugin:'
	    puts 'vagrant plugin install vagrant-vbguest'
	    exit;
	  end
	
  
    #master
    config.vm.define "master" do |master|
      master.vm.box = "bento/centos-7.4"
      master.vm.hostname = "master"
      master.ssh.forward_agent = true
      master.ssh.username = 'vagrant'
      master.ssh.password = 'vagrant'
      # for network setting
      master.vm.network "private_network", ip: MASTER_IP
      master.vm.network :forwarded_port, guest: 22, host: 2222 
      #configure sync folder
      master.vm.synced_folder ".", "/vagrant"
      # configure vm settings as network adapter,cpus & memory limit
	  master.vm.provider :virtualbox do |m_v|
         if Vagrant::Util::Platform.windows? then
	      m_v.customize ["modifyvm", :id, "--nic1", "nat"]
	      m_v.customize ["modifyvm", :id, "--nic2", "hostonly"]
	      m_v.customize ["modifyvm", :id, "--hostonlyadapter2", "VirtualBox Host-Only Ethernet Adapter"]
	     else
	      m_v.customize ["modifyvm", :id, "--nic1", "nat"]
	      m_v.customize ["modifyvm", :id, "--nic2", "hostonly"]
	      m_v.customize ["modifyvm", :id, "--hostonlyadapter2", "vboxnet0"]
	     end
         m_v.customize ["modifyvm", :id, "--memory", 2048]
	     m_v.customize ["modifyvm", :id, "--cpus", 2]
	     m_v.customize ["modifyvm", :id, "--vram", 16]
         m_v.name="cluster master"
		end           
       master.vm.provision :shell, :path => "provision.sh", :args => MASTER_IP
    end

   # start <nodes> minions
   (1..NODES).each do |i|
      config.vm.define "minion-#{i}" do |node|
	node.vm.box = "bento/centos-7.4"
	node.vm.hostname = "minion-#{i}"
	node.ssh.forward_agent = true
	node.ssh.username = 'vagrant'
	node.ssh.password = 'vagrant'
	# for network setting
	node.vm.network "private_network", ip: CLUSTER_IP+"10#{i}" 
	#configure synced folder
    node.vm.synced_folder ".", "/vagrant"
	#node.vm.network :forwarded_port, guest: 22, host: 2222+#{i}
        # configure vm settings as network adapter,cpus & memory limit
		node.vm.provider :virtualbox do |n_v|
		 if Vagrant::Util::Platform.windows? then
		      n_v.customize ["modifyvm", :id, "--nic1", "nat"]
	 	      n_v.customize ["modifyvm", :id, "--nic2", "hostonly"]
		      n_v.customize ["modifyvm", :id, "--hostonlyadapter2", "VirtualBox Host-Only Ethernet Adapter"]
		 else
		      n_v.customize ["modifyvm", :id, "--nic1", "nat"]
		      n_v.customize ["modifyvm", :id, "--nic2", "hostonly"]
		      n_v.customize ["modifyvm", :id, "--hostonlyadapter2", "vboxnet0"]
		 end
                 n_v.customize ["modifyvm", :id, "--memory", 2048]
		 n_v.customize ["modifyvm", :id, "--cpus", 2]
		 n_v.customize ["modifyvm", :id, "--vram", 16]
		 n_v.name="centos 7 minion#{i}" 
		end
	node.vm.provision :shell, :path => "provision_minion.sh", :args => MASTER_IP
      end
   end
end

# provision
#config.vm.provision "shell", :inline => "echo 'Defaults:vagrant !requiretty' >>  /etc/sudoers.d/vagrant"
#config.vm.provision :shell, :path => "provision.sh", :args => "192.168.200.10"
#  config.vm.provision "shell", path: 'provision/scripts/provision.sh', privileged: false
#config.vm.provision :shell, :path => "test.sh", :args => "192.168.200.10"

